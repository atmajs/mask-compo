UTest({
	$before () {
		Compo.config.setDOMLibrary(Compo.DomLite);
	},
	$after () {
		Compo.config.setDOMLibrary(window.$);
	},
	'filter' () {
		var div = mask.render('div { span; section; }');
		var set = Compo.DomLite(div);
		eq_(set.length, 1);
		eq_(set.filter('div').length, 1);
		eq_(set.filter('span').length, 0);
		eq_(set.filter('section').length, 0);
		
		var fragment = mask.render('div; span.foo; section.foo;');
		var set = Compo.DomLite(fragment.childNodes);
		
		eq_(set.length, 3);
		eq_(set.filter('div').length, 1);
		eq_(set.filter('span').length, 1);
		eq_(set.filter('section').length, 1);
		eq_(set.filter('.foo').length, 2);
		eq_(set.filter('span.foo').length, 1);
	},
	'event' () {
		var div = document.createElement('div');
		var set = Compo.DomLite(div);
		eq_(set[0], div);
		
		set.on('click', assert.await());
		$(div).click();
	},
	'delegated event' () {
		var div = mask.render('div { span; section }');
		document.body.appendChild(div);
		
		var set = Compo.DomLite(div);
		eq_(set.length, 1);
		eq_(set[0].tagName, 'DIV');
		
		var count = 0;
		set.on('click', 'span', () => ++count);
		
		$(div).children('span').trigger('click');
		$(div).children('section').trigger('click');
		$(div).trigger('click');
		
		eq_(count, 1);
	},
	'component with events' () {
		mask.registerHandler('foo', Compo({
			template: `
				h4 > em > 'Hello'
				section > p > 'World'
			`,
			events: {
				'click: p': assert.await(function(event) {
					notEq_(expects.length, 0);
					eq_(event.target.tagName, expects.shift());
				})
			}
		}));
		
		var expects = [ 'P' ];
		var dom = $(mask.render('foo').children).appendTo('body');
		
		
		dom
			.find('p')
			.eq_('length', 1)
			.trigger('click')
			;
		
		eq_(expects.length, 0);
	},
	'children' () {
		var dom = mask.render('div > span; section > p > a');
		var children = Compo.DomLite(dom).children();
		eq_(children.length, 2);
		eq_(children[0].tagName, 'SPAN');
		eq_(children[1].tagName, 'P');
		
		children = children.children();
		eq_(children.length, 1);
		eq_(children[0].tagName, 'A');
	},
	'closest' () {
		var dom = mask.render('section > p name=baz > a > em');
		var $ = Compo.DomLite(dom).find('em');
		
		eq_($.length, 1);
		
		$ = $.closest('[name=baz]');
		eq_($.length, 1);
		eq_($[0].tagName, 'P');
	}
});
